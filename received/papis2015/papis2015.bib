@Proceedings{PAPIs-2015,
  booktitle={Proceedings of The 2nd International Conference on Predictive APIs and Apps},
  shortname={PAPIs 2015},
  year={2016},
  editor={Dorard, Louis and Reid, Mark D. and Martin, Francisco J.},
  volume={50}
}

@InProceedings{azureml15,
  title={AzureML: Anatomy of a machine learning service},
  author={AzureML Team},
  pages={1--13},
  abstract={In this paper, we describe AzureML: a web service enabling software developers and data scientists to build predictive applications. AzureML provides several unique features. These include (a) Collaboration (b) Versioning (c) Graphical authoring(d) Push button operationalization and (e) Monetization. We outline the design principles, system design and lessons learned in building such a system.}
}

@InProceedings{gawalt15,
  title={Deploying high throughput predictive models with the actor framework},
  author={Gawalt, Brian},
  pages={15--28},
  abstract={The majority of data science and machine learning tutorials focus on generating models: assembling a dataset; splitting the data into training, validation, and testing subsets; building the model; and demonstrating its generalizability. But when it’s time to repeat the analogous steps when using the model in production, issues of high latency or low throughput can arise. To an end user, the cost of too much time spent featurizing raw data and evaluating a model over features can wind up erasing any gains a smarter prediction can offer.

Exposing concurrency in these model-usage steps, and then capitalizing on that concurrency, can improve throughput. This paper describes how the actor framework can be used to bring a predictive model to a real-time setting. Two case-study examples are described: a live deployment built for the freelancing platform Upwork, a simple text classifier with accompanying code for use as an introductory project.}
}

@InProceedings{montgomery15,
  title={Protocols and Structures for Inference: A RESTful API for Machine Learning},
  author={Montgomery, James and Reid, Mark D. and Drake, Barry},
  pages={29--42},
  abstract={Diversity in machine learning APIs (in both software toolkits and web services), works against realising machine learning’s full potential, making it difficult to draw on individual algorithms from different products or to compose multiple algorithms to solve complex tasks. This paper introduces the Protocols and Structures for Inference (PSI) service architecture and specification, which presents inferential entities—relations, attributes, learners and predictors—as RESTful web resources that are accessible via a common but flexible and extensible interface. Resources describe the data they ingest or emit using a variant of the JSON schema language, and the API has mechanisms to support non-JSON data and future extension of service features.}
}

@InProceedings{cetinsoy15,
  title={The Past, Present, and Future of Machine Learning APIs},
  author={Cetinsoy, Atakan and Martin, Francisco J. and Ortega, José Antonio and Petersen, Poul},
  pages={43--49},
  abstract={In this paper, we start off by summarizing the key evolutionary turning points of machine learning APIs and conclude by laying out our vision for the future of this key enabling component that can power tomorrow’s ubiquitous intelligent systems.}
}
