name: Test Scripts

on:
  push:
    branches: [ main, gh-pages ]
    paths:
      - 'lib/*.rb'
      - 'test/*.rb'
      - 'scripts/*.rb'
  pull_request:
    branches: [ main, gh-pages ]
    paths:
      - 'lib/*.rb'
      - 'test/*.rb'
      - 'scripts/*.rb'

jobs:
  test-bibtex-cleaner:
    name: Test BibTeX Cleaner
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        
    - name: Install dependencies
      run: |
        gem install test-unit
        
    - name: Run BibTeX cleaner automated tests
      run: |
        ruby test/run_tests.rb
        
    - name: Run BibTeX cleaner manual validation
      run: |
        ruby test/manual_test.rb
        
    - name: Test auto-detection functionality
      run: |
        # Create a test directory with a single BibTeX file
        mkdir -p test_auto_detection
        cd test_auto_detection
        
        # Create a BibTeX file with issues
        cat > test.bib << 'EOF'
        @article{test2024,
          title = {Machine Learning 100%},
          author = {John Doe and Jane Smith},
          abstract = {This is 50% accurate},
          year = {2024}
        }
        EOF
        
        # Test auto-detection with issues (should fail in strict mode)
        echo "Testing auto-detection with issues..."
        if ruby ../lib/tidy_bibtex.rb --strict --check-author-commas; then
          echo "ERROR: Script should have failed with issues present"
          exit 1
        else
          echo "✓ Correctly failed with issues present"
        fi
        
        # Test auto-detection with fixes
        echo "Testing auto-detection with fixes..."
        ruby ../lib/tidy_bibtex.rb --fix-percent --quiet
        if [ -f "test_cleaned.bib" ]; then
          echo "✓ Output file created successfully"
        else
          echo "ERROR: Output file not created"
          exit 1
        fi
        
        # Test that cleaned file passes validation
        echo "Testing cleaned file validation..."
        if ruby ../lib/tidy_bibtex.rb --strict --check-author-commas test_cleaned.bib /tmp/validation.bib; then
          echo "✓ Cleaned file passes validation"
        else
          echo "ERROR: Cleaned file should pass validation"
          exit 1
        fi

  test-unicode-cleaner:
    name: Test Unicode Cleaner
    runs-on: ubuntu-latest
    if: false  # Disabled until tests are created
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        
    - name: Install dependencies
      run: |
        gem install test-unit
        
    - name: Run Unicode cleaner tests
      run: |
        echo "Unicode cleaner tests not yet implemented"
        # ruby test/test_unicode_cleaner.rb

  test-volume-creation:
    name: Test Volume Creation Scripts
    runs-on: ubuntu-latest
    if: false  # Disabled until tests are created
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        
    - name: Install dependencies
      run: |
        gem install test-unit bibtex-ruby
        
    - name: Run volume creation tests
      run: |
        echo "Volume creation tests not yet implemented"
        # ruby test/test_volume_creation.rb

  test-all-scripts:
    name: Test All Scripts
    runs-on: ubuntu-latest
    needs: [test-bibtex-cleaner]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        
    - name: Install dependencies
      run: |
        gem install test-unit bibtex-ruby
        
    - name: Run comprehensive test suite
      run: |
        echo "Running comprehensive test suite..."
        
        # Run all available tests
        if [ -f "test/run_tests.rb" ]; then
          echo "Running automated test suite..."
          ruby test/run_tests.rb
        fi
        
        if [ -f "test/manual_test.rb" ]; then
          echo "Running manual validation..."
          ruby test/manual_test.rb
        fi
        
        echo "✓ All available tests completed successfully"
        
    - name: Test script syntax validation
      run: |
        echo "Validating Ruby script syntax..."
        for script in lib/*.rb scripts/*.rb; do
          if [ -f "$script" ]; then
            echo "Checking $script..."
            ruby -c "$script"
          fi
        done
        echo "✓ All Ruby scripts have valid syntax"
